name: build-pipeline

permissions:
  contents: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  repo: sr79979
  build_number: ${{ github.run_number }}
  PROJECTS: "youtube-clone band-booking"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_projects: ${{ steps.set-changed-projects.outputs.changed_projects }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Debug - Show Git Diff
        run: |
          echo "Checking changes between ${{ github.event.before }} and ${{ github.sha }}"
          git diff --name-only ${{ github.event.before }} ${{ github.sha }}
      
      - name: Detect Changes in Projects
        id: set-changed-projects
        run: |
          CHANGED_PROJECTS=""
          for project in $PROJECTS; do
            if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^$project/"; then
              CHANGED_PROJECTS+="$project "
            fi
          done
          echo "Changed Projects: $CHANGED_PROJECTS"
          echo "changed_projects=$CHANGED_PROJECTS" >> $GITHUB_OUTPUT

  build:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed_projects != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [youtube-clone, band-booking]
    steps:
      - uses: actions/checkout@v4

      # ‚úÖ Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Project
        run: |
          CHANGED_PROJECTS="${{ needs.detect-changes.outputs.changed_projects }}"
          if [[ "$CHANGED_PROJECTS" != *"${{ matrix.project }}"* ]]; then
            echo "‚è© Skipping ${{ matrix.project }} (no changes)"
            exit 0
          fi

          echo "üîπ Processing ${{ matrix.project }}"
          if [ "${{ matrix.project }}" == "band-booking" ]; then
            echo "üîß Running Maven Build"
            cd ${{ matrix.project }}
            mvn clean package
            cd ..
          fi

      - name: Build Docker image with cache
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.project }}
          file: ${{ matrix.project }}/Dockerfile
          push: false
          tags: ${{ matrix.project }}:${{ env.build_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save Docker image as tar
        run: docker save ${{ matrix.project }}:${{ env.build_number }} -o ${{ matrix.project }}.tar

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-${{ matrix.project }}
          path: ${{ matrix.project }}.tar

      - name: List Docker images
        run: docker images

  scan:
    needs: [detect-changes, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Docker Image Artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
        # downloads docker-image-youtube-clone and docker-image-band-booking

      - name: Install Trivy Scanner
        run: |
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.62.1/trivy_0.62.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.62.1_Linux-64bit.deb

      - name: Scan Docker Image for Vulnerabilities
        run: |
          set -x
          CHANGED_PROJECTS="${{ needs.detect-changes.outputs.changed_projects }}"
          if [ -z "$CHANGED_PROJECTS" ]; then
            echo "No Changed projects detected."
            exit 0
          fi
          for project in $CHANGED_PROJECTS; do
            echo "üõ°Ô∏è Vulnerability Scanning $project"
            trivy image --format table --input docker-image-${project}/${project}.tar --output scan_${project}.md || true
          done

      - name: Upload Scan Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: security-scan
          path: "scan_*.md"
